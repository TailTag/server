name: auth
services:
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:latest
    restart: unless-stopped
    user: root
    ports:
      - "8443:8443"
    volumes:
      - "./keycloak-data/:/opt/keycloak/data"
      - ./themes:/opt/keycloak/providers/
      - "../certificates/:/etc/x509/https" # map certificates to container
    env_file:
      - .env
    environment:
      KC_PROXY_ADDRESS_FORWARDING: "true"
      # KC_HOSTNAME_STRICT: "false"
      # KC_HOSTNAME_STRICT_HTTPS: "false"
      KC_HOSTNAME: "auth.${BASE_HOST}"
      # KC_HOSTNAME_ADMIN_URL: "https://auth.${BASE_HOST}:8443"
      # KC_PROXY: passthrough
      # KC_PROXY_HEADERS: xforwarded
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KEYCLOAK_USER}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KEYCLOAK_PASSWORD}
      KC_DB_URL: jdbc:postgresql://keycloak_db:5432/keycloak
      KC_DB: postgres
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
      KC_HTTPS_CERTIFICATE_FILE: /etc/x509/https/public.crt
      KC_HTTPS_CERTIFICATE_KEY_FILE: /etc/x509/https/private.pem
    depends_on:
      - keycloak_db
    networks:
      - traefik
    command:
      # Start the server with out certs
      - 'start'
      - "--log-level=DEBUG"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.port=8443"
      - "traefik.backend=traefik"
      - "traefik.http.routers.keycloak.service=keycloak"
      - "traefik.http.routers.keycloak.rule=Host(`auth.${BASE_HOST}`)"
      - "traefik.http.routers.keycloak.entrypoints=https"
      - "traefik.http.routers.keycloak.tls=true"
      - "traefik.http.services.keycloak.loadbalancer.server.port=8443"
  keycloak_db:
    container_name: keycloak_db
    image: postgres:latest
    restart: always
    user: root
    env_file:
      - .env
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: 5432
    volumes:
      - ./postgres_data/:/var/lib/postgresql/data
    networks:
      - traefik
networks:
  traefik:
    name: traefik
    external: true
